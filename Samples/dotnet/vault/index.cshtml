@using PayJS_Samples.Misc
@using Newtonsoft.Json;
@{
    string MerchantId = "417227771521";
    string MerchantKey = "I5T2R2K6V1Q3";
    string PostbackUrl = "http://www.example.com";
    string Environment = Shared.Environment;
    
    string RequestId = "Invoice" + (new Random()).Next(100).ToString();
    var NonceTuple = Shared.GetNonce();
    string Nonce = NonceTuple.Item2;
    string RequestType = "vault";

    var request = new
    {
        merchantId = MerchantId,
        merchantKey = MerchantKey,
        requestType = RequestType,
        requestId = RequestId,
        postbackUrl = PostbackUrl,
        nonce = Nonce,
        environment = Environment,
        preAuth = false
    };

    string jsonReq = JsonConvert.SerializeObject(request);
    string AuthKey = Shared.GetAuthKey(jsonReq, Shared.DeveloperKEY, NonceTuple);

    string RequestId2 = "Invoice" + (new Random()).Next(100).ToString();
    string Amount = "28";
    var NonceTuple2 = Shared.GetNonce();
    string Nonce2 = NonceTuple2.Item2;
    string RequestType2 = "payment";

    var request2 = new
    {
        merchantId = MerchantId,
        merchantKey = MerchantKey,
        requestType = RequestType2,
        requestId = RequestId2,
        postbackUrl = PostbackUrl,
        nonce = Nonce2,
        amount = Amount,
        environment = Environment,
        preAuth = false
    };

    string jsonReq2 = JsonConvert.SerializeObject(request2);
    string AuthKey2 = Shared.GetAuthKey(jsonReq2, Shared.DeveloperKEY, NonceTuple2);
}
<div class="wrapper text-center">
    <h1>Tokenization</h1>
    <p>Not ready to charge a card, or expecting to charge it multiple times? Run a vault-only request to store the card, then charge it when you're ready.</p>
    <br />
    <div>
        <button class="btn btn-primary" id="vaultButton">Store Card</button>
        <button class="btn btn-warning" id="paymentButton" disabled>Charge Card</button>
        <br /><br />
        <h5>Results:</h5>
        <p style="width:100%"><pre><code id="paymentResponse">The response will appear here as JSON, and in your browser console as a JavaScript object.</code></pre></p>
    </div>
</div>
<script type="text/javascript">
    PayJS(['PayJS/Request', 'PayJS/Response', 'PayJS/Core', 'PayJS/UI', 'jquery'],
    function($REQ, $RESP, $CORE, $UI, $) {
        $UI.Initialize({
            apiKey: "@Shared.DeveloperID",
            merchantId: "@MerchantId",
            environment: "@Environment",
            authKey: "@AuthKey",
            requestType: "@RequestType",
            requestId: "@RequestId",
            elementId: "vaultButton",
            debug: true,
            postbackUrl: "@PostbackUrl",
            phoneNumber: "1-800-555-1234",
            nonce: "@Nonce",
            //suppressResultPage: true
        });
        $UI.setCallback(function(vaultResponse) {
            console.log(vaultResponse.getResponse());
            $("#paymentResponse").text(
                vaultResponse.getResponse({ "json": true })
            );
            if (vaultResponse.getVaultSuccess()) {
                $("#vaultButton").prop('disabled', true);
                $("#paymentButton").prop('disabled', false);
                $("#paymentButton").click(function() {
                    $(this).attr("disabled", true);
                    $("#sps-holder").remove(); // remove initializations from previous samples
                    $CORE.Initialize({
                        apiKey: "@Shared.DeveloperID",
                        merchantId: "@MerchantId",
                        authKey: "@AuthKey2",
                        requestType: "@RequestType2",
                        requestId: "@RequestId2",
                        amount: "@Amount",
                        debug: true,
                        postbackUrl: "@PostbackUrl",
                        nonce: "@Nonce2",
                        environment: "@Environment"
                    });
                    $REQ.doTokenPayment(vaultResponse.getVaultToken(), "123", function(paymentResponse) {
                        $RESP.tryParse(paymentResponse);
                        $("#paymentResponse").text(
                            $RESP.getResponse({ "json": true })
                        );
                    });
                })
            } else {
                // ...
            }
        });
    });
</script>

